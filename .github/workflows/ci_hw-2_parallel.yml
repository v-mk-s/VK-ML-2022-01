# author : v - mk - s | copyright 2022

# basic workflow (github Actions)

# This is a basic workflow to help you get started with Actions

name: CI HW-2 PARALLEL (Continuous Integration)

on: push

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: "hw-1"
      - uses: actions/setup-python@v1
      - name: Install cpplint
        run: pip install cpplint
      - name: Install clang-tidy
        run: sudo apt-get install clang-tidy
      - name: Install cppcheck
        run: sudo apt-get install cppcheck
      - name: Install clang-format
        run: sudo apt-get install clang-format
      - name: Make check
        # run: make check
  build:
    runs-on: ubuntu-latest
    # needs: [check]
    steps:
      - name: Fetch
        uses: actions/checkout@v2
        with:
          ref: "hw-2"
      - name: Install GTest
        run: |
          mkdir gtest
          cd gtest
          git clone https://github.com/google/googletest.git 
          cd googletest 
          cmake -B build 
          cmake --build build 
          sudo cmake --install build
      - name: Make build
        run: make build
  test:
    runs-on: ubuntu-latest
    # needs: [build]
    steps:
      - name: Fetch
        uses: actions/checkout@v2
        with:
          ref: "hw-2"
      - name: Update
        run: sudo apt update -y
      - name: Install valgrind
        run: sudo apt-get install valgrind
      - name: Install GTest
        run: |
          mkdir gtest
          cd gtest
          git clone https://github.com/google/googletest.git 
          cd googletest 
          cmake -B build 
          cmake --build build 
          sudo cmake --install build
      - name: Make build
        run: make build
      - name: Make test
        run: make test
      - name: Make gcov
        run: |
          gcov -abcfu build/**/CMakeFiles/**/*.gcno
      - name: Upload
        uses: codecov/codecov-action@v2
        with:
          directory: |
            /home/runner/work/VK-ML-2022-01/VK-ML-2022-01/
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run valgrind
        run: valgrind --error-exitcode=1 --tool=memcheck --leak-check=yes -s build/tests/test

# # author : v - mk - s | copyright 2022

# # basic workflow (github Actions)

# # This is a basic workflow to help you get started with Actions

# name: CI HW-2 PARALLEL (Continuous Integration)

# on: push

# jobs:
#   InstallAndCheck:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Fetch
#       - uses: actions/checkout@v2
#         with:
#           ref: "hw-1"
#       - uses: actions/setup-python@v1
#       - name: Update cpplint
#         run: pip install cpplint
#       - name: Update clang-tidy
#         run: sudo apt-get install clang-tidy
#       - name: Update cppcheck
#         run: sudo apt-get install cppcheck
#       - name: Update clang-format
#         run: sudo apt-get install clang-format
#       - name: Make check
#         run: make check
#   Build:
#     runs-on: ubuntu-latest
#     needs: [InstallAndCheck]
#     steps:
#       - name: Fetch
#       - uses: actions/checkout@v2
#         with:
#           ref: "hw-2"
#       - name: Update GTest
#         run: |
#           mkdir gtest
#           cd gtest
#           git clone https://github.com/google/googletest.git 
#           cd googletest 
#           cmake -B build 
#           cmake --build build 
#           sudo cmake --install build
#       - name: Make build
#         run: make build
#   Test:
#     runs-on: ubuntu-latest
#     needs: [Build]
#     steps:
#       - name: Fetch
#       - uses: actions/checkout@v2
#         with:
#           ref: "hw-2"
#       - name: Update All
#         run: sudo apt update -y
#       - name: Install valgrind
#         run: sudo apt-get install valgrind
#       - name: Install GTest
#         run: |
#           mkdir gtest
#           cd gtest
#           git clone https://github.com/google/googletest.git 
#           cd googletest 
#           cmake -B build 
#           cmake --build build 
#           sudo cmake --install build
#       - name: Make build
#         run: make build
#       - name: Make test
#         run: make test
#       - name: Run gcov
#         run: |
#           gcov -abcfu build/**/CMakeFiles/**/*.gcno
#       - name: Upload gcov report
#       - uses: codecov/codecov-action@v2
#         with:
#           directory: |
#             /home/runner/work/VK-ML-2022-01/VK-ML-2022-01/
#           token: ${{ secrets.CODECOV_TOKEN }}
#       - name: Run valgrind
#         run: valgrind --error-exitcode=1 --tool=memcheck --leak-check=yes -s build/tests/test
