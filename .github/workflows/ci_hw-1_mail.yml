# basic workflow (github Actions)

# This is a basic workflow to help you get started with Actions

name: CI HW-1 MAIL (Continuous Integration)

on: push

jobs:
  Valgrind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: prepare environment
        run: sudo apt update && sudo apt install build-essential libgtest-dev cmake gcc valgrind
      - name: build
        run: cmake . -Bbuild && cmake --build build --target tests
      - name: valgrind_memcheck_run
        run: valgrind --tool=memcheck --leak-check=yes --error-exitcode=1 ./build/tests/tests
  Sanitaizer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: prepare environment
        run: sudo apt update && sudo apt install build-essential libgtest-dev cmake gcc valgrind
      - name: build
        run: cmake . -Bbuild -DBUILD_SANITIZERS=1 && cmake --build build --target tests
      - name: sanitizer_memcheck_run
        run: ./build/tests/tests
  SanitaizerThread:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: prepare environment
        run: sudo apt update && sudo apt install build-essential libgtest-dev cmake gcc valgrind
      - name: build
        run: cmake . -Bbuild -DBUILD_SANITIZERS_THREAD=1 && cmake --build build --target tests
      - name: thread_sanitizer_run
        run: ./build/tests/tests
  Linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: prepare environment
        run: sudo apt update && sudo apt install python3 python3-pip && pip3 install --user cpplint
      - name: linters_(cpplint)_run
        run: ~/.local/bin/cpplint --recursive .
  CoverageReport:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: prepare environment
        run: sudo apt update && sudo apt install build-essential cmake gcc lcov libgtest-dev
      - name: build
        run: cmake . -Bbuild && cmake --build build --target tests
      - name: test run
        run: ./build/tests/tests
      - name: codecov
        run: lcov -t "./build/tests/tests" -o coverage.info -c -d "./build/mail_lib/CMakeFiles/mrea_lib.dir/" && genhtml -o report coverage.info
      - name: upload_artifact
        uses: actions/upload-artifact@v3
        with:
          name: codecov-report
          path: ./report
